- commit = @repository.commit(tag.dereferenced_target)
- release = @releases.find { |release| release.tag == tag.name }
%li.flex-row
  .row-main-content.str-truncated
    = link_to project_tag_path(@project, tag.name), class: 'item-title ref-name' do
      = icon('tag')
      = tag.name

    - if protected_tag?(@project, tag)
      %span.label.label-success
        protected

    - if tag.message.present?
      &nbsp;
      = strip_gpg_signature(tag.message)

    - if commit
      .block-truncated
        = render 'projects/branches/commit', commit: commit, project: @project
    - else
      %p
        Cant find HEAD commit for this tag
    - if release && release.description.present?
      .description.prepend-top-default
        .wiki
          = markdown_field(release, :description)

  .row-fixed-content.controls
    = render 'projects/buttons/download', project: @project, ref: tag.name, pipeline: @tags_pipelines[tag.name]

    - if can?(current_user, :push_code, @project)
      = link_to edit_project_tag_release_path(@project, tag.name), class: 'btn has-tooltip', title: "Edit release notes", data: { container: "body" } do
        = icon("pencil")

    - if can?(current_user, :admin_project, @project)
      = link_to project_tag_path(@project, tag.name), class: "btn btn-remove remove-row has-tooltip #{protected_tag?(@project, tag) ? 'disabled' : ''}", title: "Delete tag", method: :delete, data: { confirm: "Deleting the '#{tag.name}' tag cannot be undone. Are you sure?", container: 'body' }, remote: true do
        = icon("trash-o")
